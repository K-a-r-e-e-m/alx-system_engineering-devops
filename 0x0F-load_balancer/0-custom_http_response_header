#!/usr/bin/env bash
# Configure Nginx so that its HTTP response contains a custom header.

# First Update our local package and then install Nginx web server
sudo apt-get update -y
sudo apt-get install nginx -y

# Changes the ownership of directory to current user
sudo chown -R "$USER":"$USER" /var/www/html
# Give permission to owner in directory to read, write and excute
sudo chmod -R 755 /var/www

# The path of config file
config_file="/etc/nginx/sites-enabled/default"

# Redirects the output of the command to the html file
# Replace the content of the file with "Hello World!"
# tee used to write to a file with sudo privilege
echo "Hello World!" | tee /var/www/html/index.nginx-debian.html
# String to replace in config file
new_string="server_name _;\n\n\tlocation \/redirect_me {\n\treturn 301 https:\/\/www.youtube.com\/watch?v=QH2-TGUlwu4;\n\t}"

# Edit file in config file (replacement).
sed -i "s/server_name _;/$new_string/" $config_file

echo "Ceci n'est pas une page" | sudo tee /var/www/html/error_not_found.html
# String that we search for inside config file
searching_for="listen \[\:\:\]\:80 default_server;"
# String to replace in config file
string_custom="$searching_for\n\tadd_header X-Served-By $HOSTNAME;\n\terror_page 404 \/error_not_found.html;\n\tlocation = \/error_not_found.html {\n\t\troot \/var\/www\/html;\n\t\tinternal;\n\t}"

# Add the new_string after search_for statement in config file
sed -i "s/$searching_for/$string_custom/" $config_file

# Restarts the Nginx service to save configuration changes
sudo service nginx restart
